// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoApp.Infrastructure.Persistence;

#nullable disable

namespace TodoApp.Infrastructure.Migrations
{
    [DbContext(typeof(TodoDbContext))]
    partial class TodoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TodoApp.Domain.Entities.clsTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Task");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Development",
                            CreatedAt = new DateTime(2025, 7, 16, 20, 46, 44, 115, DateTimeKind.Utc).AddTicks(5489),
                            Description = "Create project structure and configure dependencies.",
                            DueDate = new DateTime(2025, 7, 19, 20, 46, 44, 115, DateTimeKind.Utc).AddTicks(5491),
                            IsCompleted = false,
                            OwnerId = "user-1",
                            Priority = 1,
                            Title = "Setup project"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Docs",
                            CreatedAt = new DateTime(2025, 7, 16, 20, 46, 44, 115, DateTimeKind.Utc).AddTicks(5501),
                            Description = "Document the API endpoints.",
                            DueDate = new DateTime(2025, 7, 21, 20, 46, 44, 115, DateTimeKind.Utc).AddTicks(5502),
                            IsCompleted = false,
                            OwnerId = "user-2",
                            Priority = 2,
                            Title = "Write documentation"
                        });
                });

            modelBuilder.Entity("TodoApp.Domain.Entities.clsUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = "user-1",
                            Email = "admin@example.com",
                            PasswordHash = "admin-hash",
                            Role = "Owner",
                            Username = "admin"
                        },
                        new
                        {
                            Id = "user-2",
                            Email = "guest@example.com",
                            PasswordHash = "guest-hash",
                            Role = "Guest",
                            Username = "guest"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
